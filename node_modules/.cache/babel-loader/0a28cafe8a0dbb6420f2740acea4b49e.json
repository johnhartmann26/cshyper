{"ast":null,"code":"var _jsxFileName = \"/Users/jh/dev/cshyper/src/components/Form.js\";\nimport React from \"react\";\nimport dragula from \"react-dragula\";\nimport firebase from \"firebase\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rankedTeams: {},\n      numOfTeamsRanked: 0\n    };\n    this.countTeams = this.countTeams.bind(this);\n    this.completeRankings = this.completeRankings.bind(this);\n  }\n\n  pushFirestore(submission) {\n    let db = firebase.firestore();\n    db.collection(\"rankings\").add(submission);\n  }\n\n  completeRankings() {\n    let date = Date();\n    let submission = {\n      Date: date\n    };\n    let rank = 0;\n    document.querySelectorAll(\"#dropTarget div\").forEach(element => submission[++rank] = element.innerText);\n    this.pushFirestore(submission);\n  }\n\n  countTeams() {\n    let rankedTeams = {};\n    let rank = 0;\n    document.querySelectorAll(\"#dropTarget div\").forEach(element => rankedTeams[++rank] = element.innerText);\n    this.setState({\n      rankedTeams: rankedTeams,\n      numOfTeamsRanked: Object.keys(rankedTeams).length\n    });\n  }\n\n  render() {\n    const listTeams = this.props.unrankedTeams.map(team => /*#__PURE__*/React.createElement(\"div\", {\n      id: team,\n      className: \"formElem\",\n      key: team,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, team));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dragBox\",\n      id: \"dragElements\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, listTeams));\n  }\n\n  componentDidMount() {\n    dragula([document.getElementById(\"dragElements\"), document.getElementById(\"dropTarget\")], {\n      revertOnSpill: true,\n      mirrorContainer: document.body\n    });\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/jh/dev/cshyper/src/components/Form.js"],"names":["React","dragula","firebase","Form","Component","constructor","props","state","rankedTeams","numOfTeamsRanked","countTeams","bind","completeRankings","pushFirestore","submission","db","firestore","collection","add","date","Date","rank","document","querySelectorAll","forEach","element","innerText","setState","Object","keys","length","render","listTeams","unrankedTeams","map","team","componentDidMount","getElementById","revertOnSpill","mirrorContainer","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,gBAAgB,EAAE;AAFP,KAAb;AAIA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AACDE,EAAAA,aAAa,CAACC,UAAD,EAAa;AACxB,QAAIC,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,GAA1B,CAA8BJ,UAA9B;AACD;;AACDF,EAAAA,gBAAgB,GAAG;AACjB,QAAIO,IAAI,GAAGC,IAAI,EAAf;AACA,QAAIN,UAAU,GAAG;AACfM,MAAAA,IAAI,EAAED;AADS,KAAjB;AAGA,QAAIE,IAAI,GAAG,CAAX;AACAC,IAAAA,QAAQ,CACLC,gBADH,CACoB,iBADpB,EAEGC,OAFH,CAEYC,OAAD,IAAcX,UAAU,CAAC,EAAEO,IAAH,CAAV,GAAqBI,OAAO,CAACC,SAFtD;AAGA,SAAKb,aAAL,CAAmBC,UAAnB;AACD;;AACDJ,EAAAA,UAAU,GAAG;AACX,QAAIF,WAAW,GAAG,EAAlB;AACA,QAAIa,IAAI,GAAG,CAAX;AACAC,IAAAA,QAAQ,CACLC,gBADH,CACoB,iBADpB,EAEGC,OAFH,CAEYC,OAAD,IAAcjB,WAAW,CAAC,EAAEa,IAAH,CAAX,GAAsBI,OAAO,CAACC,SAFvD;AAGA,SAAKC,QAAL,CAAc;AACZnB,MAAAA,WAAW,EAAEA,WADD;AAEZC,MAAAA,gBAAgB,EAAEmB,MAAM,CAACC,IAAP,CAAYrB,WAAZ,EAAyBsB;AAF/B,KAAd;AAID;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG,KAAK1B,KAAL,CAAW2B,aAAX,CAAyBC,GAAzB,CAA8BC,IAAD,iBAC7C;AAAK,MAAA,EAAE,EAAEA,IAAT;AAAe,MAAA,SAAS,EAAC,UAAzB;AAAoC,MAAA,GAAG,EAAEA,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,CADgB,CAAlB;AAMA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,SADH,CADF,CADF;AAOD;;AACDI,EAAAA,iBAAiB,GAAG;AAClBnC,IAAAA,OAAO,CACL,CACEqB,QAAQ,CAACe,cAAT,CAAwB,cAAxB,CADF,EAEEf,QAAQ,CAACe,cAAT,CAAwB,YAAxB,CAFF,CADK,EAKL;AACEC,MAAAA,aAAa,EAAE,IADjB;AAEEC,MAAAA,eAAe,EAAEjB,QAAQ,CAACkB;AAF5B,KALK,CAAP;AAUD;;AA9DgC;;AAiEnC,eAAerC,IAAf","sourcesContent":["import React from \"react\";\nimport dragula from \"react-dragula\";\nimport firebase from \"firebase\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rankedTeams: {},\n      numOfTeamsRanked: 0,\n    };\n    this.countTeams = this.countTeams.bind(this);\n    this.completeRankings = this.completeRankings.bind(this);\n  }\n  pushFirestore(submission) {\n    let db = firebase.firestore();\n    db.collection(\"rankings\").add(submission);\n  }\n  completeRankings() {\n    let date = Date();\n    let submission = {\n      Date: date,\n    };\n    let rank = 0;\n    document\n      .querySelectorAll(\"#dropTarget div\")\n      .forEach((element) => (submission[++rank] = element.innerText));\n    this.pushFirestore(submission);\n  }\n  countTeams() {\n    let rankedTeams = {};\n    let rank = 0;\n    document\n      .querySelectorAll(\"#dropTarget div\")\n      .forEach((element) => (rankedTeams[++rank] = element.innerText));\n    this.setState({\n      rankedTeams: rankedTeams,\n      numOfTeamsRanked: Object.keys(rankedTeams).length,\n    });\n  }\n  render() {\n    const listTeams = this.props.unrankedTeams.map((team) => (\n      <div id={team} className=\"formElem\" key={team}>\n        {team}\n      </div>\n    ));\n\n    return (\n      <div className=\"Form\">\n        <div className=\"dragBox\" id=\"dragElements\">\n          {listTeams}\n        </div>\n      </div>\n    );\n  }\n  componentDidMount() {\n    dragula(\n      [\n        document.getElementById(\"dragElements\"),\n        document.getElementById(\"dropTarget\"),\n      ],\n      {\n        revertOnSpill: true,\n        mirrorContainer: document.body,\n      }\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}