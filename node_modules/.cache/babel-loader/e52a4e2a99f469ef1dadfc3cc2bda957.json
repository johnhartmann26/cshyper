{"ast":null,"code":"var _jsxFileName = \"/Users/home/dev/cshyper/src/components/Form.js\";\nimport React from \"react\";\nimport dragula from \"react-dragula\";\nimport firebase from \"firebase\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rankedTeams: {},\n      numOfTeamsRanked: 0\n    };\n    this.countTeams = this.countTeams.bind(this);\n    this.completeRankings = this.completeRankings.bind(this);\n  }\n\n  pushFirestore(submission) {\n    let db = firebase.firestore();\n    db.collection(\"rankings\").add(submission);\n  }\n\n  completeRankings() {\n    let name = prompt(\"What is your name?\");\n    let country = prompt(\"What country are you from?\");\n    let date = Date();\n    let submission = {\n      Ranker: name,\n      Country: country,\n      Date: date\n    };\n    let rank = 0;\n    document.querySelectorAll(\"#dropTarget div\").forEach(element => submission[++rank] = element.innerText);\n    this.pushFirestore(submission);\n  }\n\n  countTeams() {\n    let rankedTeams = {};\n    let rank = 0;\n    document.querySelectorAll(\"#dropTarget div\").forEach(element => rankedTeams[++rank] = element.innerText);\n    this.setState({\n      rankedTeams: rankedTeams,\n      numOfTeamsRanked: Object.keys(rankedTeams).length\n    });\n  }\n\n  render() {\n    firebase.firestore().collection(\"teams\").doc(\"listOfTeams\"); // const listTeams = this.state.unrankedTeams.map(team => (\n    //   <div id={team} className=\"formElem\" key={team}>\n    //     {team}\n    //   </div>\n    // ));\n\n    console.log(this.state.unrankedTeams);\n    return React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"titleBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Last Week's Rankings\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Please drag teams from the left box into the right box. When you've finished, click the submit button at the bottom.\")), React.createElement(\"div\", {\n      className: \"titleBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Your Rankings\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"You have ranked \", this.state.numOfTeamsRanked, \" out of 20 teams. Please complete all 20 of your rankings before you submit.\")), React.createElement(\"div\", {\n      className: \"dragBox\",\n      id: \"dragElements\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" yes\"), React.createElement(\"div\", {\n      className: \"dragBox\",\n      id: \"dropTarget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: this.state.numOfTeamsRanked !== 20,\n      id: \"formSubmit\",\n      onClick: this.completeRankings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n  componentDidMount() {\n    dragula([document.getElementById(\"dragElements\"), document.getElementById(\"dropTarget\")], {\n      revertOnSpill: true,\n      mirrorContainer: document.body\n    }).on(\"drop\", this.countTeams);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/home/dev/cshyper/src/components/Form.js"],"names":["React","dragula","firebase","Form","Component","constructor","props","state","rankedTeams","numOfTeamsRanked","countTeams","bind","completeRankings","pushFirestore","submission","db","firestore","collection","add","name","prompt","country","date","Date","Ranker","Country","rank","document","querySelectorAll","forEach","element","innerText","setState","Object","keys","length","render","doc","console","log","unrankedTeams","componentDidMount","getElementById","revertOnSpill","mirrorContainer","body","on"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dragula from \"react-dragula\";\nimport firebase from \"firebase\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rankedTeams: {},\n      numOfTeamsRanked: 0\n    };\n    this.countTeams = this.countTeams.bind(this);\n    this.completeRankings = this.completeRankings.bind(this);\n  }\n  pushFirestore(submission) {\n    let db = firebase.firestore();\n    db.collection(\"rankings\").add(submission);\n  }\n  completeRankings() {\n    let name = prompt(\"What is your name?\");\n    let country = prompt(\"What country are you from?\");\n    let date = Date();\n    let submission = {\n      Ranker: name,\n      Country: country,\n      Date: date\n    };\n    let rank = 0;\n    document\n      .querySelectorAll(\"#dropTarget div\")\n      .forEach(element => (submission[++rank] = element.innerText));\n    this.pushFirestore(submission);\n  }\n  countTeams() {\n    let rankedTeams = {};\n    let rank = 0;\n    document\n      .querySelectorAll(\"#dropTarget div\")\n      .forEach(element => (rankedTeams[++rank] = element.innerText));\n    this.setState({\n      rankedTeams: rankedTeams,\n      numOfTeamsRanked: Object.keys(rankedTeams).length\n    });\n  }\n  render() {\n    firebase\n        .firestore()\n        .collection(\"teams\")\n        .doc(\"listOfTeams\")\n    // const listTeams = this.state.unrankedTeams.map(team => (\n    //   <div id={team} className=\"formElem\" key={team}>\n    //     {team}\n    //   </div>\n    // ));\n    console.log(this.state.unrankedTeams);\n\n    return (\n      <div className=\"Form\">\n        <div className=\"titleBox\">\n          <h2>Last Week's Rankings</h2>\n          <p>\n            Please drag teams from the left box into the right box. When you've\n            finished, click the submit button at the bottom.\n          </p>\n        </div>\n        <div className=\"titleBox\">\n          <h2>Your Rankings</h2>\n          <p>\n            You have ranked {this.state.numOfTeamsRanked} out of 20 teams.\n            Please complete all 20 of your rankings before you submit.\n          </p>\n        </div>\n        <div className=\"dragBox\" id=\"dragElements\">\n          {/*listTeams*/} yes\n        </div>\n        <div className=\"dragBox\" id=\"dropTarget\"></div>\n        <button\n          disabled={this.state.numOfTeamsRanked !== 20}\n          id=\"formSubmit\"\n          onClick={this.completeRankings}\n        >\n          submit\n        </button>\n      </div>\n    );\n  }\n  componentDidMount() {\n    dragula(\n      [\n        document.getElementById(\"dragElements\"),\n        document.getElementById(\"dropTarget\")\n      ],\n      {\n        revertOnSpill: true,\n        mirrorContainer: document.body\n      }\n    ).on(\"drop\", this.countTeams);\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}