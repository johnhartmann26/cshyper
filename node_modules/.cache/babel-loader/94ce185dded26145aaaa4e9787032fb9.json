{"ast":null,"code":"var _jsxFileName = \"/Users/jh/dev/cshyper/src/App.js\";\nimport React from \"react\";\nimport Header from \"./components/Header\";\nimport Rankings from \"./components/Rankings\";\nimport Form from \"./components/Form\";\nimport firebase from \"./firebase\";\nimport LogoPNG from \"./components/images/csgo.png\";\nimport { ReactComponent as StandingsSVG } from \"@svgr/webpack?-svgo,+titleProp,+ref!./components/images/scoreboard.svg\";\nimport { ReactComponent as RulerSVG } from \"@svgr/webpack?-svgo,+titleProp,+ref!./components/images/ruler.svg\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHome: true,\n      numOfRankers: 0,\n      isAdmin: false,\n      rankedTeams: [],\n      rankings: [],\n      unrankedTeams: []\n    };\n    this.calcRankings = this.calcRankings.bind(this);\n    this.toggleAdmin = this.toggleAdmin.bind(this);\n    this.switchTab = this.switchTab.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount() {\n    let db = firebase.firestore();\n    db.collection(\"rankings\").get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        this.setState(curr => {\n          let pushed = curr.rankings.concat(doc.data());\n          return {\n            rankings: pushed\n          };\n        });\n      });\n    }).then(this.calcRankings);\n    db.collection(\"teams\").get().then(querySnapshot => {\n      querySnapshot.forEach(doc => {\n        this.setState({\n          unrankedTeams: doc.data().teams\n        });\n      });\n    });\n  }\n\n  calcRankings() {\n    let response = this.state.rankings;\n    let rankings = [];\n    let allTeams = [];\n    this.setState({\n      numOfRankers: response.length\n    });\n\n    for (let i = 0; i < response.length; i++) {\n      let individualRanking = {\n        ranker: response[i][\"Ranker\"],\n        country: response[i][\"Country\"],\n        rankings: []\n      };\n\n      for (let j = 1; j < 21; j++) {\n        // change back to 21\n        let team = response[i][j];\n        individualRanking.rankings.push(team);\n      }\n\n      rankings.push(individualRanking);\n    }\n\n    for (let i = 0; i < rankings.length; i++) {\n      for (let j = 0; j < rankings[i].rankings.length; j++) {\n        let team = rankings[i].rankings[j].trim();\n        let pointsToAdd = 20 - j;\n        let index = allTeams.findIndex(obj => obj.name === team);\n\n        if (index === -1) {\n          allTeams.push({\n            name: team,\n            points: pointsToAdd,\n            best: j + 1,\n            worst: j + 1,\n            appearances: 1\n          });\n        } else {\n          allTeams[index].points += pointsToAdd;\n          allTeams[index].appearances += 1;\n\n          if (j < allTeams[index].best) {\n            allTeams[index].best = j + 1;\n          } else if (j > allTeams[index].worst) {\n            allTeams[index].worst = j + 1;\n          }\n        }\n      }\n    }\n\n    allTeams = allTeams.sort((a, b) => a.points < b.points ? 1 : -1);\n    this.setState({\n      rankedTeams: allTeams\n    });\n    return allTeams;\n  }\n\n  toggleAdmin() {\n    this.state.isAdmin ? this.setState({\n      isAdmin: false\n    }) : this.setState({\n      isAdmin: true\n    });\n  }\n\n  switchTab() {\n    this.state.isHome ? this.setState({\n      isHome: false\n    }) : this.setState({\n      isHome: true\n    });\n  }\n\n  render() {\n    if (this.state.isHome) {\n      // showRankingsPage\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(StandingsSVG, {\n        className: \"logo\",\n        id: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: LogoPNG,\n        className: \"logo\",\n        alt: \"csgo_logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(RulerSVG, {\n        className: \"logo\",\n        onClick: this.switchTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Rankings, {\n        className: \"rankingsTable\",\n        rankedTeams: this.state.rankedTeams,\n        rankersCount: this.state.numOfRankers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      // setRankingsPage\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"navBar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(StandingsSVG, {\n        className: \"logo\",\n        onClick: this.switchTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: LogoPNG,\n        className: \"logo\",\n        alt: \"csgo_logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(RulerSVG, {\n        className: \"logo\",\n        id: \"active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Form, {\n        unrankedTeams: this.state.unrankedTeams,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jh/dev/cshyper/src/App.js"],"names":["React","Header","Rankings","Form","firebase","LogoPNG","App","Component","constructor","props","state","isHome","numOfRankers","isAdmin","rankedTeams","rankings","unrankedTeams","calcRankings","bind","toggleAdmin","switchTab","componentDidMount","db","firestore","collection","get","then","querySnapshot","forEach","doc","setState","curr","pushed","concat","data","teams","response","allTeams","length","i","individualRanking","ranker","country","j","team","push","trim","pointsToAdd","index","findIndex","obj","name","points","best","worst","appearances","sort","a","b","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"./components/Header\";\nimport Rankings from \"./components/Rankings\";\nimport Form from \"./components/Form\";\nimport firebase from \"./firebase\";\nimport LogoPNG from \"./components/images/csgo.png\";\nimport { ReactComponent as StandingsSVG } from \"./components/images/scoreboard.svg\";\nimport { ReactComponent as RulerSVG } from \"./components/images/ruler.svg\";\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHome: true,\n      numOfRankers: 0,\n      isAdmin: false,\n      rankedTeams: [],\n      rankings: [],\n      unrankedTeams: [],\n    };\n    this.calcRankings = this.calcRankings.bind(this);\n    this.toggleAdmin = this.toggleAdmin.bind(this);\n    this.switchTab = this.switchTab.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n  componentDidMount() {\n    let db = firebase.firestore();\n    db.collection(\"rankings\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.setState((curr) => {\n            let pushed = curr.rankings.concat(doc.data());\n            return {\n              rankings: pushed,\n            };\n          });\n        });\n      })\n      .then(this.calcRankings);\n    db.collection(\"teams\")\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.forEach((doc) => {\n          this.setState({ unrankedTeams: doc.data().teams });\n        });\n      });\n  }\n  calcRankings() {\n    let response = this.state.rankings;\n    let rankings = [];\n    let allTeams = [];\n    this.setState({ numOfRankers: response.length });\n    for (let i = 0; i < response.length; i++) {\n      let individualRanking = {\n        ranker: response[i][\"Ranker\"],\n        country: response[i][\"Country\"],\n        rankings: [],\n      };\n      for (let j = 1; j < 21; j++) {\n        // change back to 21\n        let team = response[i][j];\n        individualRanking.rankings.push(team);\n      }\n\n      rankings.push(individualRanking);\n    }\n    for (let i = 0; i < rankings.length; i++) {\n      for (let j = 0; j < rankings[i].rankings.length; j++) {\n        let team = rankings[i].rankings[j].trim();\n        let pointsToAdd = 20 - j;\n        let index = allTeams.findIndex((obj) => obj.name === team);\n        if (index === -1) {\n          allTeams.push({\n            name: team,\n            points: pointsToAdd,\n            best: j + 1,\n            worst: j + 1,\n            appearances: 1,\n          });\n        } else {\n          allTeams[index].points += pointsToAdd;\n          allTeams[index].appearances += 1;\n          if (j < allTeams[index].best) {\n            allTeams[index].best = j + 1;\n          } else if (j > allTeams[index].worst) {\n            allTeams[index].worst = j + 1;\n          }\n        }\n      }\n    }\n    allTeams = allTeams.sort((a, b) => (a.points < b.points ? 1 : -1));\n    this.setState({\n      rankedTeams: allTeams,\n    });\n    return allTeams;\n  }\n  toggleAdmin() {\n    this.state.isAdmin\n      ? this.setState({ isAdmin: false })\n      : this.setState({ isAdmin: true });\n  }\n  switchTab() {\n    this.state.isHome\n      ? this.setState({ isHome: false })\n      : this.setState({ isHome: true });\n  }\n  render() {\n    if (this.state.isHome) {\n      // showRankingsPage\n      return (\n        <div>\n          <div className=\"navBar\">\n            <StandingsSVG className=\"logo\" id=\"active\" />\n            <img src={LogoPNG} className=\"logo\" alt=\"csgo_logo\"></img>\n            <RulerSVG className=\"logo\" onClick={this.switchTab} />\n          </div>\n          <Rankings\n            className=\"rankingsTable\"\n            rankedTeams={this.state.rankedTeams}\n            rankersCount={this.state.numOfRankers}\n          />\n        </div>\n      );\n    } else {\n      // setRankingsPage\n      return (\n        <div>\n          <div className=\"navBar\">\n            <StandingsSVG className=\"logo\" onClick={this.switchTab} />\n            <img src={LogoPNG} className=\"logo\" alt=\"csgo_logo\"></img>\n            <RulerSVG className=\"logo\" id=\"active\" />\n          </div>\n          <Form unrankedTeams={this.state.unrankedTeams} />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}