{"ast":null,"code":"var _jsxFileName = \"/Users/home/dev/cshyper/src/components/Form.js\";\nimport React from \"react\";\nimport dragula from \"react-dragula\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFirstAttempt: false,\n      unrankedTeams: [\"Astralis\", \"Liquid\", \"Evil Geniuses\", \"fnatic\", \"Vitality\", \"Avangar\", \"Mousesports\", \"100 Thieves\", \"Natus Vincere\", \"ENCE\", \"NIP\", \"Complexity\", \"Furia\", \"G2\", \"forZe\", \"Cr4zy\", \"MIBR\", \"North\", \"Heroic\", \"FaZe\", \"Sharks\", \"\"],\n      rankedTeams: {},\n      numOfTeamsRanked: 0\n    };\n    this.countTeams = this.countTeams.bind(this);\n    this.completeRankings = this.completeRankings.bind(this);\n  }\n\n  completeRankings() {\n    if (this.state.isFirstAttempt) {\n      this.setState({\n        isFirstAttempt: false\n      });\n      alert(\"Are you sure? This cannot be undone. \\n Click submit again to complete your rankings.\");\n    } else {\n      let submission = {\n        Ranker: \"User\",\n        Country: \"Country\"\n      };\n      let rank = 0;\n      document.querySelectorAll(\"#dropTarget div\").forEach(element => submission[++rank] = element.innerText);\n      console.log(submission);\n    }\n  }\n\n  countTeams() {\n    let rankedTeams = {};\n    let rank = 0;\n    document.querySelectorAll(\"#dropTarget div\").forEach(element => rankedTeams[++rank] = element.innerText);\n    this.setState({\n      rankedTeams: rankedTeams,\n      numOfTeamsRanked: Object.keys(rankedTeams).length\n    });\n  }\n\n  render() {\n    const listTeams = this.state.unrankedTeams.map(team => React.createElement(\"div\", {\n      id: team,\n      className: \"formElem\",\n      key: team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, team));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"titleBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Last Week's Rankings\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Please drag teams from the left box into the right box. When you've finished, click the submit button at the bottom.\")), React.createElement(\"div\", {\n      className: \"titleBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Your Rankings\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"You have ranked \", this.state.numOfTeamsRanked, \" out of 20 teams. Please complete all 20 of your rankings before you submit.\")), React.createElement(\"div\", {\n      className: \"dragBox\",\n      id: \"dragElements\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, listTeams), React.createElement(\"div\", {\n      className: \"dragBox\",\n      id: \"dropTarget\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"FormSubmit\",\n      onClick: this.completeRankings,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"submit\"));\n  }\n\n  componentDidMount() {\n    dragula([document.getElementById(\"dragElements\"), document.getElementById(\"dropTarget\")], {\n      revertOnSpill: true,\n      mirrorContainer: document.body\n    }).on(\"drop\", this.countTeams);\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/home/dev/cshyper/src/components/Form.js"],"names":["React","dragula","Form","Component","constructor","props","state","isFirstAttempt","unrankedTeams","rankedTeams","numOfTeamsRanked","countTeams","bind","completeRankings","setState","alert","submission","Ranker","Country","rank","document","querySelectorAll","forEach","element","innerText","console","log","Object","keys","length","render","listTeams","map","team","componentDidMount","getElementById","revertOnSpill","mirrorContainer","body","on"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dragula from \"react-dragula\";\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFirstAttempt: false,\n            unrankedTeams: [\n                \"Astralis\",\n                \"Liquid\",\n                \"Evil Geniuses\",\n                \"fnatic\",\n                \"Vitality\",\n                \"Avangar\",\n                \"Mousesports\",\n                \"100 Thieves\",\n                \"Natus Vincere\",\n                \"ENCE\",\n                \"NIP\",\n                \"Complexity\",\n                \"Furia\",\n                \"G2\",\n                \"forZe\",\n                \"Cr4zy\",\n                \"MIBR\",\n                \"North\",\n                \"Heroic\",\n                \"FaZe\",\n                \"Sharks\",\n                \"\"\n            ],\n            rankedTeams: {},\n            numOfTeamsRanked: 0\n        };\n        this.countTeams = this.countTeams.bind(this);\n        this.completeRankings = this.completeRankings.bind(this);\n    }\n    completeRankings() {\n        if (this.state.isFirstAttempt) {\n            this.setState({ isFirstAttempt: false });\n            alert(\n                \"Are you sure? This cannot be undone. \\n Click submit again to complete your rankings.\"\n            );\n        } else {\n            let submission = {\n                Ranker: \"User\",\n                Country: \"Country\"\n            };\n            let rank = 0;\n            document\n                .querySelectorAll(\"#dropTarget div\")\n                .forEach(element => (submission[++rank] = element.innerText));\n            console.log(submission);\n        }\n    }\n    countTeams() {\n        let rankedTeams = {};\n        let rank = 0;\n        document\n            .querySelectorAll(\"#dropTarget div\")\n            .forEach(element => (rankedTeams[++rank] = element.innerText));\n        this.setState({\n            rankedTeams: rankedTeams,\n            numOfTeamsRanked: Object.keys(rankedTeams).length\n        });\n    }\n    render() {\n        const listTeams = this.state.unrankedTeams.map(team => (\n            <div id={team} className=\"formElem\" key={team}>\n                {team}\n            </div>\n        ));\n        return (\n            <div>\n                <div className=\"Form\">\n                    <div className=\"titleBox\">\n                        <h2>Last Week's Rankings</h2>\n                        <p>\n                            Please drag teams from the left box into the right\n                            box. When you've finished, click the submit button\n                            at the bottom.\n                        </p>\n                    </div>\n                    <div className=\"titleBox\">\n                        <h2>Your Rankings</h2>\n                        <p>\n                            You have ranked {this.state.numOfTeamsRanked} out of\n                            20 teams. Please complete all 20 of your rankings\n                            before you submit.\n                        </p>\n                    </div>\n                    <div className=\"dragBox\" id=\"dragElements\">\n                        {listTeams}\n                    </div>\n                    <div className=\"dragBox\" id=\"dropTarget\"></div>\n                </div>\n                <button id=\"FormSubmit\" onClick={this.completeRankings}>\n                    submit\n                </button>\n            </div>\n        );\n    }\n    componentDidMount() {\n        dragula(\n            [\n                document.getElementById(\"dragElements\"),\n                document.getElementById(\"dropTarget\")\n            ],\n            {\n                revertOnSpill: true,\n                mirrorContainer: document.body\n            }\n        ).on(\"drop\", this.countTeams);\n    }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}